// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  role      Role     @default(ADMIN)
  clients   Client[] // one-to-many relations
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Client {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  number    String?
  address   String?
  state     String?
  role      Role     @default(USER)
  admin     Admin?   @relation(fields: [adminId], references: [id])
  adminId   String?
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id                  String    @id @default(uuid())
  jobDescription      String
  projectManager      String
  technicalManager    String
  constructionManager String
  address             String
  state               State     @default(pending)
  client              Client?   @relation(fields: [clientId], references: [id])
  clientId            String?
  supplier            Supplier? @relation(fields: [supplierId], references: [id])
  supplierId          String?
  lat                 Float?
  lng                 Float?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model Supplier {
  id          String   @id @default(uuid())
  companyName String
  VATNumber   String
  email       String   @unique
  phone       String
  address     String
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Employee {
  id        String   @id @default(uuid())
  name      String
  number    String
  email     String
  address   String
  role      EmpRole  @default(Training)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum State {
  pending
  ongoing
  completed
}

enum EmpRole {
  Training
  Unified_Labour_Notification
  Fitness
}

enum Role {
  ADMIN
  USER
}
